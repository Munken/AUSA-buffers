// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Header.capn

#include "ausa/buf/Header.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<74> b_d62916903572d8d8 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    216, 216, 114,  53, 144,  22,  41, 214,
     12,   0,   0,   0,   1,   0,   0,   0,
     15, 120, 140,  42, 220,   3, 214, 220,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72, 101,  97, 100, 101, 114,  46,  99,
     97, 112, 110,  58,  72, 101,  97, 100,
    101, 114,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     89,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     84,   0,   0,   0,   3,   0,   1,   0,
    112,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    109,   0,   0,   0,  66,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    104,   0,   0,   0,   3,   0,   1,   0,
    132,   0,   0,   0,   2,   0,   1,   0,
    100, 111, 117,  98, 108, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    228, 215,  19, 141, 163, 244, 142, 161,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 110, 103, 108, 101, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    229, 113, 236, 219,  94, 234,  49, 156,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 103, 110,  97, 108, 115,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    103, 242,  73,  84, 187,  68,  66, 207,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d62916903572d8d8 = b_d62916903572d8d8.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_d62916903572d8d8[] = {
  &s_9c31ea5edbec71e5,
  &s_a18ef4a38d13d7e4,
  &s_cf4244bb5449f267,
};
static const uint16_t m_d62916903572d8d8[] = {0, 2, 1};
static const uint16_t i_d62916903572d8d8[] = {0, 1, 2};
const ::capnp::_::RawSchema s_d62916903572d8d8 = {
  0xd62916903572d8d8, b_d62916903572d8d8.words, 74, d_d62916903572d8d8, m_d62916903572d8d8,
  3, 3, i_d62916903572d8d8, nullptr, nullptr, { &s_d62916903572d8d8, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<64> b_a18ef4a38d13d7e4 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    228, 215,  19, 141, 163, 244, 142, 161,
     12,   0,   0,   0,   1,   0,   1,   0,
     15, 120, 140,  42, 220,   3, 214, 220,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72, 101,  97, 100, 101, 114,  46,  99,
     97, 112, 110,  58,  68, 111, 117,  98,
    108, 101,  83, 105, 100, 101, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     64,   0,   0,   0,   3,   0,   1,   0,
     76,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     73,   0,   0,   0,  98,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72,   0,   0,   0,   3,   0,   1,   0,
     84,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     81,   0,   0,   0,  90,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     80,   0,   0,   0,   3,   0,   1,   0,
     92,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    102, 114, 111, 110, 116,  83, 116, 114,
    105, 112, 115,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107,  83, 116, 114, 105,
    112, 115,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_a18ef4a38d13d7e4 = b_a18ef4a38d13d7e4.words;
#if !CAPNP_LITE
static const uint16_t m_a18ef4a38d13d7e4[] = {2, 1, 0};
static const uint16_t i_a18ef4a38d13d7e4[] = {0, 1, 2};
const ::capnp::_::RawSchema s_a18ef4a38d13d7e4 = {
  0xa18ef4a38d13d7e4, b_a18ef4a38d13d7e4.words, 64, nullptr, m_a18ef4a38d13d7e4,
  0, 3, i_a18ef4a38d13d7e4, nullptr, nullptr, { &s_a18ef4a38d13d7e4, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_9c31ea5edbec71e5 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    229, 113, 236, 219,  94, 234,  49, 156,
     12,   0,   0,   0,   1,   0,   1,   0,
     15, 120, 140,  42, 220,   3, 214, 220,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72, 101,  97, 100, 101, 114,  46,  99,
     97, 112, 110,  58,  83, 105, 110, 103,
    108, 101,  83, 105, 100, 101, 100,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 112, 115,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9c31ea5edbec71e5 = b_9c31ea5edbec71e5.words;
#if !CAPNP_LITE
static const uint16_t m_9c31ea5edbec71e5[] = {0, 1};
static const uint16_t i_9c31ea5edbec71e5[] = {0, 1};
const ::capnp::_::RawSchema s_9c31ea5edbec71e5 = {
  0x9c31ea5edbec71e5, b_9c31ea5edbec71e5.words, 47, nullptr, m_9c31ea5edbec71e5,
  0, 2, i_9c31ea5edbec71e5, nullptr, nullptr, { &s_9c31ea5edbec71e5, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_cf4244bb5449f267 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    103, 242,  73,  84, 187,  68,  66, 207,
     12,   0,   0,   0,   1,   0,   0,   0,
     15, 120, 140,  42, 220,   3, 214, 220,
      1,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 154,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     72, 101,  97, 100, 101, 114,  46,  99,
     97, 112, 110,  58,  83, 105, 103, 110,
     97, 108,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    110,  97, 109, 101,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     12,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_cf4244bb5449f267 = b_cf4244bb5449f267.words;
#if !CAPNP_LITE
static const uint16_t m_cf4244bb5449f267[] = {0};
static const uint16_t i_cf4244bb5449f267[] = {0};
const ::capnp::_::RawSchema s_cf4244bb5449f267 = {
  0xcf4244bb5449f267, b_cf4244bb5449f267.words, 32, nullptr, m_cf4244bb5449f267,
  0, 1, i_cf4244bb5449f267, nullptr, nullptr, { &s_cf4244bb5449f267, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace AUSA {
namespace buf {

// Header
#ifndef _MSC_VER
constexpr uint16_t Header::_capnpPrivate::dataWordSize;
constexpr uint16_t Header::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Header::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Header::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Header::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DoubleSided
#ifndef _MSC_VER
constexpr uint16_t DoubleSided::_capnpPrivate::dataWordSize;
constexpr uint16_t DoubleSided::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DoubleSided::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DoubleSided::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DoubleSided::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SingleSided
#ifndef _MSC_VER
constexpr uint16_t SingleSided::_capnpPrivate::dataWordSize;
constexpr uint16_t SingleSided::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SingleSided::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SingleSided::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SingleSided::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// Signal
#ifndef _MSC_VER
constexpr uint16_t Signal::_capnpPrivate::dataWordSize;
constexpr uint16_t Signal::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Signal::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Signal::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Signal::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

