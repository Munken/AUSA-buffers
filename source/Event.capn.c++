// Generated by Cap'n Proto compiler, DO NOT EDIT
// source: Event.capn

#include "buf/Event.capn.h"

namespace capnp {
namespace schemas {
static const ::capnp::_::AlignedData<77> b_e71af3616e442894 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    148,  40,  68, 110,  97, 243,  26, 231,
     11,   0,   0,   0,   1,   0,   0,   0,
     26, 218, 194, 241,  17, 165,  69, 149,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 138,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 175,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69, 118, 101, 110, 116,  46,  99,  97,
    112, 110,  58,  69, 118, 101, 110, 116,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     12,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     68,   0,   0,   0,   3,   0,   1,   0,
     96,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     93,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    120,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    117,   0,   0,   0, 106,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
    100, 111, 117,  98, 108, 101,  79, 117,
    116, 112, 117, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    122,   5, 240, 105, 244, 127, 134, 157,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 110, 103, 108, 101,  79, 117,
    116, 112, 117, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    158,  77, 232, 105, 161, 181, 192, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 105, 103, 110,  97, 108,  79, 117,
    116, 112, 117, 116,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    161,  50, 239, 215, 154,   3, 207, 209,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_e71af3616e442894 = b_e71af3616e442894.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_e71af3616e442894[] = {
  &s_9d867ff469f0057a,
  &s_abc0b5a169e84d9e,
  &s_d1cf039ad7ef32a1,
};
static const uint16_t m_e71af3616e442894[] = {0, 2, 1};
static const uint16_t i_e71af3616e442894[] = {0, 1, 2};
const ::capnp::_::RawSchema s_e71af3616e442894 = {
  0xe71af3616e442894, b_e71af3616e442894.words, 77, d_e71af3616e442894, m_e71af3616e442894,
  3, 3, i_e71af3616e442894, nullptr, nullptr, { &s_e71af3616e442894, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<47> b_9d867ff469f0057a = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    122,   5, 240, 105, 244, 127, 134, 157,
     11,   0,   0,   0,   1,   0,   0,   0,
     26, 218, 194, 241,  17, 165,  69, 149,
      2,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 119,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69, 118, 101, 110, 116,  46,  99,  97,
    112, 110,  58,  68, 111, 117,  98, 108,
    101,  79, 117, 116, 112, 117, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      8,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     41,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     36,   0,   0,   0,   3,   0,   1,   0,
     48,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     45,   0,   0,   0,  42,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     40,   0,   0,   0,   3,   0,   1,   0,
     52,   0,   0,   0,   2,   0,   1,   0,
    102, 114, 111, 110, 116,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    158,  77, 232, 105, 161, 181, 192, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     98,  97,  99, 107,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
    158,  77, 232, 105, 161, 181, 192, 171,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     16,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_9d867ff469f0057a = b_9d867ff469f0057a.words;
#if !CAPNP_LITE
static const ::capnp::_::RawSchema* const d_9d867ff469f0057a[] = {
  &s_abc0b5a169e84d9e,
};
static const uint16_t m_9d867ff469f0057a[] = {1, 0};
static const uint16_t i_9d867ff469f0057a[] = {0, 1};
const ::capnp::_::RawSchema s_9d867ff469f0057a = {
  0x9d867ff469f0057a, b_9d867ff469f0057a.words, 47, d_9d867ff469f0057a, m_9d867ff469f0057a,
  1, 2, i_9d867ff469f0057a, nullptr, nullptr, { &s_9d867ff469f0057a, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<89> b_abc0b5a169e84d9e = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    158,  77, 232, 105, 161, 181, 192, 171,
     11,   0,   0,   0,   1,   0,   1,   0,
     26, 218, 194, 241,  17, 165,  69, 149,
      3,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0, 231,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69, 118, 101, 110, 116,  46,  99,  97,
    112, 110,  58,  83, 105, 110, 103, 108,
    101,  79, 117, 116, 112, 117, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
     16,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     97,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     92,   0,   0,   0,   3,   0,   1,   0,
    104,   0,   0,   0,   2,   0,   1,   0,
      1,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   1,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     96,   0,   0,   0,   3,   0,   1,   0,
    124,   0,   0,   0,   2,   0,   1,   0,
      2,   0,   0,   0,   1,   0,   0,   0,
      0,   0,   1,   0,   2,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    121,   0,   0,   0,  58,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116,   0,   0,   0,   3,   0,   1,   0,
    144,   0,   0,   0,   2,   0,   1,   0,
      3,   0,   0,   0,   2,   0,   0,   0,
      0,   0,   1,   0,   3,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    141,   0,   0,   0,  34,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    136,   0,   0,   0,   3,   0,   1,   0,
    164,   0,   0,   0,   2,   0,   1,   0,
    109, 117, 108,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    115, 116, 114, 105, 112,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      6,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    101, 110, 101, 114, 103, 121,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
     10,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
    116, 100,  99,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   3,   0,   1,   0,
      7,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     14,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_abc0b5a169e84d9e = b_abc0b5a169e84d9e.words;
#if !CAPNP_LITE
static const uint16_t m_abc0b5a169e84d9e[] = {2, 0, 1, 3};
static const uint16_t i_abc0b5a169e84d9e[] = {0, 1, 2, 3};
const ::capnp::_::RawSchema s_abc0b5a169e84d9e = {
  0xabc0b5a169e84d9e, b_abc0b5a169e84d9e.words, 89, nullptr, m_abc0b5a169e84d9e,
  0, 4, i_abc0b5a169e84d9e, nullptr, nullptr, { &s_abc0b5a169e84d9e, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
static const ::capnp::_::AlignedData<32> b_d1cf039ad7ef32a1 = {
  {   0,   0,   0,   0,   5,   0,   6,   0,
    161,  50, 239, 215, 154,   3, 207, 209,
     11,   0,   0,   0,   1,   0,   1,   0,
     26, 218, 194, 241,  17, 165,  69, 149,
      0,   0,   7,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     21,   0,   0,   0, 194,   0,   0,   0,
     29,   0,   0,   0,   7,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     25,   0,   0,   0,  63,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     69, 118, 101, 110, 116,  46,  99,  97,
    112, 110,  58,  83, 105, 103, 110,  97,
    108,  79, 117, 116, 112, 117, 116,   0,
      0,   0,   0,   0,   1,   0,   1,   0,
      4,   0,   0,   0,   3,   0,   4,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   1,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
     13,   0,   0,   0,  50,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   3,   0,   1,   0,
     20,   0,   0,   0,   2,   0,   1,   0,
    118,  97, 108, 117, 101,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      8,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0,
      0,   0,   0,   0,   0,   0,   0,   0, }
};
::capnp::word const* const bp_d1cf039ad7ef32a1 = b_d1cf039ad7ef32a1.words;
#if !CAPNP_LITE
static const uint16_t m_d1cf039ad7ef32a1[] = {0};
static const uint16_t i_d1cf039ad7ef32a1[] = {0};
const ::capnp::_::RawSchema s_d1cf039ad7ef32a1 = {
  0xd1cf039ad7ef32a1, b_d1cf039ad7ef32a1.words, 32, nullptr, m_d1cf039ad7ef32a1,
  0, 1, i_d1cf039ad7ef32a1, nullptr, nullptr, { &s_d1cf039ad7ef32a1, nullptr, nullptr, 0, 0, nullptr }
};
#endif  // !CAPNP_LITE
}  // namespace schemas
}  // namespace capnp

// =======================================================================================

namespace AUSA {
namespace protobuf {

// Event
#ifndef _MSC_VER
constexpr uint16_t Event::_capnpPrivate::dataWordSize;
constexpr uint16_t Event::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind Event::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* Event::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* Event::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// DoubleOutput
#ifndef _MSC_VER
constexpr uint16_t DoubleOutput::_capnpPrivate::dataWordSize;
constexpr uint16_t DoubleOutput::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind DoubleOutput::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* DoubleOutput::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* DoubleOutput::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SingleOutput
#ifndef _MSC_VER
constexpr uint16_t SingleOutput::_capnpPrivate::dataWordSize;
constexpr uint16_t SingleOutput::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SingleOutput::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SingleOutput::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SingleOutput::_capnpPrivate::brand;
#endif  // !CAPNP_LITE

// SignalOutput
#ifndef _MSC_VER
constexpr uint16_t SignalOutput::_capnpPrivate::dataWordSize;
constexpr uint16_t SignalOutput::_capnpPrivate::pointerCount;
#endif
#if !CAPNP_LITE
constexpr ::capnp::Kind SignalOutput::_capnpPrivate::kind;
constexpr ::capnp::_::RawSchema const* SignalOutput::_capnpPrivate::schema;
constexpr ::capnp::_::RawBrandedSchema const* SignalOutput::_capnpPrivate::brand;
#endif  // !CAPNP_LITE


}  // namespace
}  // namespace

